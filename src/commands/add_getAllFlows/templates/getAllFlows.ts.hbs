import {readdirSync, statSync} from "node:fs";
import {resolve} from "node:path";
import {FlowServerOptions} from "@genkit-ai/express";
import {get} from "lodash";

{{commandInputDeclarationCode}}

export async function getAllFlows() {
    type IFlows = FlowServerOptions['flows'];
    const flowsDir = resolve(__dirname);

    const flows = await Promise.all(
        readdirSync(flowsDir).map(
            async (name) => {
                if (!statSync(`${flowsDir}/${name}`).isDirectory()) {
                    return;
                }
                try {
                    const flowList = require(`${flowsDir}/${name}/flows.js`);
                    if (flowList) {
                        return Object.entries(flowList).map(([k, val]) => {
                            if (!val?.hasOwnProperty("flow")) {
                                return;
                            }
                            exports[k] = val;
                            return val;
                        })
                    }
                } catch (e: any) {
                    console.error(e);
                }
                return;
            }
        )
    )
    return flows.flat().filter(Boolean) as IFlows;
}

// getAllFlows()
