
import {ai} from "@/ai/ai";
import {doRerankFn, GKHRerankerConfigSchema, rerankerFnByRef} from "@/rerankers/helpers/common";
import {z} from "genkit";

{{commandInputDeclarationCode}}
/* $ref: TODO: register your reranker to your ai.plugins
export const ai = genkit({
    plugins: [
        vertexAIRerankers({
            rerankers: ['semantic-ranker-512', 'semantic-ranker-fast-004'], // <--- HERE
            projectId: gcloudProject,
            location: gcloudLocation,
        }),
        vertexAI(),
    ],
    // other configs ...
});
**/

const defaultConfig: z.infer<typeof GKHRerankerConfigSchema> = {
    k: $topK,
    filter: ({score, metadata}) => {
        return score > 0.1; //
    }
}

export const {{name}}Reranker = ai.defineReranker(
    {
        name: "{{name}}Reranker",
        configSchema: GKHRerankerConfigSchema.extend({
            k: z.number().default($topK)
        }),
        // info
    },
    async (query, documents, options) => {
        //implemetations
        options = {
            ...defaultConfig,
            ...options,
        }
        return rerankerFnByRef($ref)(query, documents, options)
    },
);

export const {{name}}RerankerRerank = doRerankFn({
    reranker: {{name}}Reranker
});